name: Build and Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: windows-latest
    
    permissions:
      contents: write

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 10.8.0
          run_install: false

      - name: Install dependencies
        run: pnpm install

      - name: Compile TypeScript
        run: pnpm exec tsc

      - name: Build Electron app
        run: pnpm run build-only

      - name: Debug directory structure
        shell: pwsh
        run: |
          Write-Host "Current directory: $PWD"
          Write-Host "Listing all directories in current location:"
          Get-ChildItem -Path . -Directory | ForEach-Object { Write-Host $_.FullName }
          
          Write-Host "Checking for 'release' directory:"
          $releaseExists = Test-Path -Path ./release
          Write-Host "Release directory exists: $releaseExists"
          
          if ($releaseExists) {
            Write-Host "Contents of release directory:"
            Get-ChildItem -Path ./release -Recurse | Select-Object FullName
          }
          
          Write-Host "Checking for 'dist' directory:"
          $distExists = Test-Path -Path ./dist
          Write-Host "Dist directory exists: $distExists"
          
          Write-Host "Checking for other possible output locations:"
          Get-ChildItem -Path . -Recurse -Include *.exe | Select-Object FullName
      
      - name: Get version from package.json
        id: package_version
        shell: pwsh
        run: |
          $packageJson = Get-Content -Path package.json | ConvertFrom-Json
          $version = $packageJson.version
          echo "version=$version" >> $env:GITHUB_OUTPUT
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./**/*.exe
            ./**/*.yml
            ./**/*.yaml
          name: Release v${{ steps.package_version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}